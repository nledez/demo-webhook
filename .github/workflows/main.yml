name: Docker

on:
  push:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          config: .github/buildkitd.toml
      - name: Versions
        id: versions
        run: |
          echo "SANDBOX_VERSION=$(grep 'version[ ]*=' sandbox/version.py | sed -r 's/.*\"(.*)\".*/\1/')" >> $GITHUB_OUTPUT
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: nledez/sandbox
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ steps.versions.outputs.SANDBOX_VERSION}}
            type=sha,prefix={{branch}}-
            type=ref,event=branch
            type=ref,event=tag
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Load Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Test docker image
        run: |
          export CONTAINER_NAME=sandbox

          docker container run --platform=linux/amd64 -d --init -p 8000:8000 --rm --name ${CONTAINER_NAME} nledez/sandbox:latest
          sleep 10
          docker logs ${CONTAINER_NAME}
          curl -s http://127.0.0.1:8000/version | grep "${SANDBOX_VERSION}" || curl -v http://127.0.0.1:8000/version
          docker kill ${CONTAINER_NAME}
      # - name: Log in to Docker Hub
      #   if: github.event_name != 'pull_request'
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      # - name: Push Docker image
      #   if: github.event_name != 'pull_request'
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     platforms: linux/amd64,linux/arm64
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
